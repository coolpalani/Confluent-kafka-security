# Maintained by Ansible

############################ License ###########################################

ldap.authorizer.license={{ confluent_license }}

############################# Server Basics ####################################

broker.id={{ broker_id | default(groups.kafka_broker.index(inventory_hostname) + 1)}}

listeners=PLAINTEXT://{{ inventory_hostname }}:{{ kafka_port }},SSL://{{ inventory_hostname }}:{{ kafka_ssl_port }}
advertised.listeners=PLAINTEXT://{{ inventory_hostname }}:{{ kafka_port }},SSL://{{ inventory_hostname }}:{{ kafka_ssl_port }}
#broker.rack=rack-a
delete.topic.enable=true
unclean.leader.election.enable=true
message.max.bytes=1000012
replica.fetch.max.bytes=1048576
#adding the below 2 properties for the confluent 5.2.1 upgrade
#inter.broker.protocol.version=2.0
#log.message.format.version=2.0

############################ TLS Configurations ################################
#listeners=SSL://{{ inventory_hostname }}:{{ kafka_ssl_port }}
#advertised.listeners=SSL://{{ inventory_hostname }}:{{ kafka_ssl_port }}

security.inter.broker.protocol=SSL
ssl.truststore.location={{ kafka_etc_dir }}/truststore.jks
ssl.truststore.password=test1234
ssl.keystore.location={{ kafka_etc_dir }}/broker-server.keystore.jks
ssl.keystore.password=test1234
ssl.client.auth=required
authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
super.users=User:CN=kafka.confluent.local,L=Bangalore,O=Confluent,C=IN

############################# Socket Server Settings ###########################

num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

############################# Log Basics #######################################
log.dirs={{ kafka_data_dir }}
num.partitions=50
num.recovery.threads.per.data.dir=1

############################# Log Flush Policy #################################

#log.flush.interval.messages=10000
#log.flush.interval.ms=1000

############################# Log Retention Policy #############################

log.retention.hours=168
#log.retention.bytes=1073741824
log.segment.bytes=1073741824
log.retention.check.interval.ms=30000
log.cleaner.enable=true
log.cleaner.backoff.ms=15000

############################# Zookeeper ########################################

#zookeeper.connect={% for host in groups['zookeeper'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{ zk_port }}{% endfor %}

########################### Zookeeper TLS ######################################


zookeeper.connect={% for host in groups['zookeeper'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{ zk_ssl_port }}{% endfor %}

# Required to use TLS to ZooKeeper (default is false)
zookeeper.ssl.client.enable=true
# Required to use TLS to ZooKeeper
zookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
# Define key/trust stores to use TLS to ZooKeeper; ignored unless zookeeper.ssl.client.enable=true
zookeeper.ssl.truststore.location={{ kafka_etc_dir }}/truststore.jks
zookeeper.ssl.truststore.password=test1234
zookeeper.ssl.keystore.location={{ kafka_etc_dir }}/zookeeper.keystore.jks
zookeeper.ssl.keystore.password=test1234

##################### Confluent Metrics Reporter ###############################

metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{ kafka_ssl_port }}{% endfor %}

confluent.metrics.reporter.zookeeper.connect={% for host in groups['zookeeper'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{ zk_ssl_port }}{% endfor %}

# Uncomment the following line if the metrics cluster has a single broker
#confluent.metrics.reporter.topic.replicas=1

confluent.metrics.reporter.security.protocol=SSL
confluent.metrics.reporter.ssl.truststore.location={{ kafka_etc_dir }}/truststore.jks
confluent.metrics.reporter.ssl.truststore.password=test1234
confluent.metrics.reporter.ssl.keystore.location={{ kafka_etc_dir }}/broker-server.keystore.jks
confluent.metrics.reporter.ssl.keystore.password=test1234
confluent.metrics.reporter.ssl.key.password=test1234

##################### Confluent Proactive Support ##############################
confluent.support.metrics.enable=false
#confluent.support.customer.id=anonymous

default.replication.factor=3
min.insync.replicas=1
offsets.topic.replication.factor=1
transaction.state.log.min.isr=1
transaction.state.log.replication.factor=1
unclean.leader.election.enable=false